{"version":3,"sources":["contact.js"],"names":["express","require","router","Router","Post","get","req","res","next","render","post","firstname","body","lastname","email","comment","save","err","errorArray","errorKeys","Object","keys","errors","forEach","key","push","message","redirect","data","params","email1","findOne","userdat","console","log","module","exports"],"mappings":";;AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAArB;;AACA,IAAIC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAb;;AACA,IAAMC,IAAI,GAAGH,OAAO,CAAC,oBAAD,CAAP,CAA8BG,IAA3C;;AAECF,MAAM,CAACG,GAAP,CAAW,GAAX,EAAgB,UAAUC,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AAEvCD,EAAAA,GAAG,CAACE,MAAJ,CAAW,SAAX;AACD,CAHF,E,CAKD;;AACAP,MAAM,CAACQ,IAAP,CAAY,GAAZ,EAAiB,UAAUJ,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AACzC;AACA,MAAME,IAAI,GAAG,IAAIN,IAAJ,EAAb;AACAM,EAAAA,IAAI,CAACC,SAAL,GAAiBL,GAAG,CAACM,IAAJ,CAASD,SAA1B;AACAD,EAAAA,IAAI,CAACG,QAAL,GAAeP,GAAG,CAACM,IAAJ,CAASC,QAAxB;AACAH,EAAAA,IAAI,CAACI,KAAL,GAAYR,GAAG,CAACM,IAAJ,CAASE,KAArB;AACAJ,EAAAA,IAAI,CAACK,OAAL,GAAcT,GAAG,CAACM,IAAJ,CAASG,OAAvB;AACAL,EAAAA,IAAI,CAACM,IAAL,CAAU,UAAAC,GAAG,EAAI;AACf;AACA,QAAIA,GAAJ,EAAS;AAEP,UAAMC,UAAU,GAAG,EAAnB;AACA,UAAMC,SAAS,GAAGC,MAAM,CAACC,IAAP,CAAYJ,GAAG,CAACK,MAAhB,CAAlB;AACAH,MAAAA,SAAS,CAACI,OAAV,CAAkB,UAAAC,GAAG;AAAA,eAAIN,UAAU,CAACO,IAAX,CAAgBR,GAAG,CAACK,MAAJ,CAAWE,GAAX,EAAgBE,OAAhC,CAAJ;AAAA,OAArB;AACA,aAAOnB,GAAG,CAACE,MAAJ,CAAW,SAAX,EAAsB;AAC3Ba,QAAAA,MAAM,EAAEJ;AADmB,OAAtB,CAAP;AAGD;;AACDX,IAAAA,GAAG,CAACoB,QAAJ,CAAa,WAAb;AACD,GAZD;AAaD,CApBD,E,CAsBA;;AACAzB,MAAM,CAACG,GAAP,CAAW,UAAX,EAAuB,UAAUC,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AAC/C,MAAMoB,IAAI,GAAGtB,GAAG,CAACuB,MAAJ,CAAWC,MAAxB;AACA1B,EAAAA,IAAI,CAAC2B,OAAL,CAAa;AAAEjB,IAAAA,KAAK,EAAEc;AAAT,GAAb,EAA8B,UAACX,GAAD,EAAMP,IAAN,EAAe;AAC5CH,IAAAA,GAAG,CAACE,MAAJ,CAAW,WAAX,EAAwB;AAAEuB,MAAAA,OAAO,EAACtB;AAAV,KAAxB;AACCuB,IAAAA,OAAO,CAACC,GAAR,CAAYxB,IAAI,CAACK,OAAjB,EAF2C,CAG3C;AACD,GAJD;AAKD,CAPD;AASAoB,MAAM,CAACC,OAAP,GAAiBlC,MAAjB","sourcesContent":["var express = require('express');\r\nvar router = express.Router();\r\nconst Post = require('../models/userdata').Post;\r\n\r\n router.get('/', function (req, res, next) {\r\n  \r\n    res.render('contact');\r\n  });\r\n\r\n// To create a new database entry\r\nrouter.post('/', function (req, res, next) {\r\n  // const post = new Post(req.body);\r\n  const post = new Post();\r\n  post.firstname = req.body.firstname\r\n  post.lastname= req.body.lastname\r\n  post.email= req.body.email\r\n  post.comment= req.body.comment\r\n  post.save(err => {\r\n    // if(err) throw err;\r\n    if (err) {\r\n     \r\n      const errorArray = [];\r\n      const errorKeys = Object.keys(err.errors);\r\n      errorKeys.forEach(key => errorArray.push(err.errors[key].message));\r\n      return res.render(\"contact\", {\r\n        errors: errorArray\r\n      });\r\n    }\r\n    res.redirect(\"/thankyou\");\r\n  });\r\n});\r\n\r\n// Shows a single post\r\nrouter.get('/:email1', function (req, res, next) {\r\n  const data = req.params.email1;\r\n  Post.findOne({ email: data }, (err, post) => {\r\n   res.render('user-data', { userdat:post });\r\n    console.log(post.comment);\r\n    //console.log(userdat);\r\n  });\r\n});\r\n\r\nmodule.exports = router;"],"file":"contact.dev.js"}